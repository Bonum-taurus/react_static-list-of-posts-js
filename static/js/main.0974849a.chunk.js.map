{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","PostInfo","post","user","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"uz8IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,aChBJC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,GAAYA,EAASC,KAAI,SAAAR,GAAO,OAC/B,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAME,EAAT,EAASA,MAAT,OACtB,mCACE,8BACG,eAED,mBAAGH,UAAU,WAAWE,KAAI,iBAAYC,GAAxC,SACGF,WCJIS,G,MAAW,SAAC,GAAD,QAAGC,KAAH,IACpBC,KAAQX,EADY,EACZA,KAAME,EADM,EACNA,MAASU,EADH,EACGA,MAAOT,EADV,EACUA,KAAME,EADhB,EACgBA,SADhB,OAEpB,mCACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,IAGH,cAAC,EAAD,CAAUZ,KAAMA,EAAME,MAAOA,OAG/B,mBAAGH,UAAU,iBAAb,SACGI,IAGkB,IAApBE,EAASQ,OACR,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaR,SAAUA,WCrBpBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,GAASA,EAAMT,KAAI,SAAAI,GAAI,OACtB,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKH,U,qBCY/B,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAI,GAAI,kCAEtCA,GAFsC,IAGzCC,MAdwBJ,EAcNG,EAAKO,OAblBC,EAAgBC,MAAK,SAAAR,GAAI,OAAIA,EAAKJ,KAAOA,MAAO,MAcrDF,UAX4Be,EAWFV,EAAKH,GAVhBc,EACdC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QAFnC,IAAyBA,EAJJb,KAkBfgB,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCxBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0974849a.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <>\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {comment.name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${comment.email}`}\n        >\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {comment.body}\n      </div>\n    </div>\n  </>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments && comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ name, email }) => (\n  <>\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  </>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post:\n  { user: { name, email }, title, body, comments } }) => (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">\n            {title}\n          </h3>\n\n          <UserInfo name={name} email={email} />\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        {comments.length === 0 ? (\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        ) : (\n          <CommentList comments={comments} />\n        )}\n      </div>\n    </>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts && posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nexport function getUserById(id) {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nexport function getCommentsById(postId) {\n  const comments = commentsFromServer\n    .filter(comment => comment.postId === postId);\n\n  return comments;\n}\n\nexport const posts = postsFromServer.map(post => (\n  {\n    ...post,\n    user: getUserById(post.userId),\n    comments: getCommentsById(post.id),\n  }));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}