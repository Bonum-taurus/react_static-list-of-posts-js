{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","PostInfo","post","title","user","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","reduce","prev","App","ReactDOM","render","document","getElementById"],"mappings":"+z8IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAMH,EAAQI,MAFhB,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,aChBJC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,aCLvCC,G,MAAW,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAME,EAAT,EAASA,MAAT,OACtB,mCACE,8BACG,eAED,mBAAGH,UAAU,WAAWE,KAAMC,EAA9B,SACGF,WCJIS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,EAAKC,QAGR,cAAC,EAAD,CAAUX,KAAMU,EAAKE,KAAKZ,KAAME,MAAOQ,EAAKE,KAAKV,WAGnD,mBAAGH,UAAU,iBAAb,SACGW,EAAKP,OAGkB,IAAzBO,EAAKL,SAASQ,OACb,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaR,SAAUK,EAAKL,kBCpBvBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKhB,UAAU,WAAf,SACGgB,EAAMT,KAAI,SAAAI,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKH,Y,qBCuBjC,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAI,GAAI,kCAEtCA,GAFsC,IAGzCE,MApBwBL,EAoBNG,EAAKO,OAnBlBC,EAAgBC,MAAK,SAAAP,GAAI,OAAIA,EAAKL,KAAOA,MAoB9CF,UAjB4Be,EAiBFV,EAAKH,GAhBhBc,EACdC,QAAO,SAACC,EAAMzB,GACb,OAAIA,EAAQsB,SAAWA,EACf,GAAN,mBAAWG,GAAX,CAAiBzB,IAGZ,YAAIyB,KACV,OARA,IAAyBH,EAJJb,KAwBfiB,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCpCrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.987864d3.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <>\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {comment.name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={comment.email}\n        >\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {comment.body}\n      </div>\n    </div>\n  </>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </div>\n  </>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ name, email }) => (\n  <>\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={email}>\n        {name}\n      </a>\n    </p>\n  </>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <>\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {post.title}\n        </h3>\n\n        <UserInfo name={post.user.name} email={post.user.email} />\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {post.body}\n      </p>\n\n      {post.comments.length === 0 ? (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      ) : (\n        <CommentList comments={post.comments} />\n      )}\n    </div>\n  </>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\n// import postsFromServer from './api/posts.json';\nimport postsFromServer from './api/posts.json';\n\n// import commentsFromServer from './api/comments.json';\nimport commentsFromServer from './api/comments.json';\n\n// import usersFromServer from './api/users.json';\nimport usersFromServer from './api/users.json';\n\nexport function getUserById(id) {\n  return usersFromServer.find(user => user.id === id);\n}\n\nexport function getCommentsById(postId) {\n  const comments = commentsFromServer\n    .reduce((prev, comment) => {\n      if (comment.postId === postId) {\n        return [...prev, comment];\n      }\n\n      return [...prev];\n    }, []);\n\n  return comments;\n}\n\nexport const posts = postsFromServer.map(post => (\n  {\n    ...post,\n    user: getUserById(post.userId),\n    comments: getCommentsById(post.id),\n  }));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}